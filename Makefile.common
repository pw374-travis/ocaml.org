# -*- mode: Makefile-gmake -*-

MPP_OPTIONS = -so '((!' -sc '!))' -son '{{!' -scn '!}}' -soc '' -scc '' -sec '' -sos '{{<' -scs '>}}' -its $(SET_STAGING)
MPP = mpp ${MPP_OPTIONS}
OMD_OPTIONS = -r ocaml=script/ocamltohtml -r tryocaml=script/ocamlapplet.bash
OMD = omd ${OMD_OPTIONS}
OMD_PP = script/md_preprocess

OCAML_VERSION = $(shell ocamlc -config | grep version | sed -e "s/version: *//")

OCAMLFLAGS = -annot
OCAMLOPT = ocamlfind ocamlopt $(OCAMLFLAGS)
OCAMLC = ocamlfind ocamlc $(OCAMLFLAGS)

ifeq ("$(OCAML_VERSION)", "3.12.1")
COMPILER_LIBS_PREPARE = ocamlc -c errors.mli &&
COMPILER_LIBS = dynlink.cma toplevellib.cma
else
COMPILER_LIBS_PREPARE=
COMPILER_LIBS = -package dynlink,compiler-libs.toplevel
endif

ocaml.org:
	find site -type d | while read l; do mkdir -p "$$(echo "$$l" | sed -e 's/^site/ocaml.org/')" ; done

template/front_code_snippet.html:template/front_code_snippet.md $(OMD_PP)
	cat "$<" | $(OMD_PP) | ${OMD} -o $@

script/rss2html: script/rss2html.ml script/http.ml
	cd script && \
	$(OCAMLOPT) -package netstring,equeue-ssl,netclient,rss \
	  -linkpkg utils.ml http.ml rss2html.ml -o ../"$@"

script/ocamltohtml:script/lexer.ml script/ocamltohtml.ml
	cd script && \
	$(OCAMLOPT) -o ../$@ lexer.ml ocamltohtml.ml && \
	$(RM) ocamltohtml.o ocamltohtml.cm[ix] lexer.o lexer.cm[ix]

script/md_preprocess: script/code_types.ml script/code.ml \
  script/md_preprocess.ml script/code_top
	cd script && \
	$(OCAMLOPT) -o ../"$@" -package omd,str,netstring -linkpkg \
	  utils.ml code_types.ml code.ml md_preprocess.ml

script/code_top: script/code_types.ml script/code_top.ml
	cd script && $(COMPILER_LIBS_PREPARE) \
	$(OCAMLC) -o ../"$@" -package netstring $(COMPILER_LIBS) \
	  -linkpkg utils.ml code_types.ml code_top.ml

script/relative_urls: script/relative_urls.ml
	cd script && \
	$(OCAMLOPT) -package netstring -linkpkg relative_urls.ml -o ../"$@" && \
	$(RM) $(addprefix relative_urls., o cmi cmx annot)

htmlescape:htmlescape.ml
	$(OCAMLOPT) $< -o $@

TRASH += template/front_code_snippet.html \
  $(addprefix script/, rss2html ocamltohtml md_preprocess \
  code_top relative_urls)

ocaml.org/index.html:template/front_code_snippet.html script/rss2html
ocaml.org/community/index.html:script/rss2html
ocaml.org/community/planet.html:script/rss2html
ocaml.org/learn/index.html:template/front_code_snippet.html
